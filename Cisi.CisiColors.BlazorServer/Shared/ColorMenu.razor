@using Cisi.CisiColors.BlazorServer.ViewState
<div class="color-menu">
    <div class="button-menu">
        <div class="button-list">
            <button class="main" @onclick=@ToggleShowDetails>Details</button>
            <div class="sub-button-list @(ShowDetails ? "open" : "closed")">
                <button class=@GetCSSClassForButton(ColorDetails.IsHexOn)
                        @onclick=@(() => ToggleDetails(ColorDetail.HEX))>Hex</button>
                <button class=@GetCSSClassForButton(ColorDetails.IsRgbOn)
                        @onclick=@(() => ToggleDetails(ColorDetail.RGB))>RGB</button>
                <button class=@GetCSSClassForButton(ColorDetails.IsHslOn)
                        @onclick=@(() => ToggleDetails(ColorDetail.HSL))>HSL</button>
            </div>
        </div>
    </div>
</div>

@code {
    private bool __showDetails;
    [Parameter]
    public bool ShowDetails
    {
        get => __showDetails;
        set {
            var hasChanged = __showDetails != value;
            __showDetails = value;
            if (hasChanged) {
                ShowDetailsChanged.InvokeAsync(value);
            }
        }
    }

    private ColorDetails __colorDetails;
    [Parameter]
    public ColorDetails ColorDetails
    {
        get => __colorDetails;
        set {
            if (__colorDetails == value) return;
            __colorDetails = value;
            ColorDetailsChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<ColorDetails> ColorDetailsChanged { get; set; }

    [Parameter]
    public EventCallback<bool> ShowDetailsChanged { get; set; }

    void ToggleShowDetails()
    {
        ShowDetails = !ShowDetails;
        if (ShowDetails && !ColorDetails.IsAnyOn())
        {
            ToggleDetails(ColorDetail.HEX);
        }
    }

    void ToggleDetails(ColorDetail detail)
    {
        ColorDetails = ColorDetails.ToggleValue(detail);
    }

    const string _subButton = "sub-button";
    const string _subButtonSelected = "sub-button selected";
    string GetCSSClassForButton(bool isOn) => isOn ? _subButtonSelected : _subButton;
}
