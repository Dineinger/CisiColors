<ColorField Color=@Color Mode="ColorFieldMode.Main">
    <div class="about-color">
        @if (ColorDescriptionMode >= ColorDescriptionMode.OnlyName)
        {
            @if (Name is not null)
            {
                <div class="name">@Name</div>
            }
            @if (ColorDescriptionMode >= ColorDescriptionMode.Main)
            {
                <dív class="color-texts">
                    <div>
                        <ColorTextHex Color=@context />
                        <QuickCopy ValueToCopy=@(context.ToString()) BackgroundColor=@context />
                    </div>
                    <hr class=@CSS_NeedLight />
                    <div>
                        <ColorTextRGB Color=@context />
                        <QuickCopy ValueToCopy=@(context.ToRGBString()) BackgroundColor=@context />
                    </div>
                    <hr class=@CSS_NeedLight />
                    <div>
                        <ColorTextHSL Color=@context />
                        <QuickCopy ValueToCopy=@(context.HSL.ToString()) BackgroundColor=@context />
                    </div>
                </dív>
            }
        }
    </div>

    <ColorShadesSW StartColor=@context ColorDescriptionMode=@ColorDescriptionMode />

</ColorField>

@code {
    [Parameter, EditorRequired]
    public Color Color { get; set; }

    [Parameter]
    public string? Name { get; set; }

    [Parameter]
    public ColorDescriptionMode ColorDescriptionMode { get; set; }

    private bool needLight => Color.IsLightColor() == false;
    private string CSS_NeedLight => needLight ? "light" : "dark";
}
