@page "/colors/{name?}"
@using Cisi.CisiColors.Infrastructure
@inject IColorReader ColorReader

@if (ColorReaderValue.TryCouldLoad(out var value))
{
    <ColorList Title=@Name Colors=@value ColorDescriptionMode=@_colorDescriptionMode />

    <ColorMenu @bind-ShowDetails=@_showDetails />
}
else if (ColorReaderValue.Status.Found)
{
    <p role="alert">The color list @Name is known, but couldn't be loaded</p>
}
else
{
    <p>The color list @Name is not known</p>
}

@code {
    [Parameter]
    public string? Name { get; set; }

    ColorReaderValue ColorReaderValue { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        ColorReaderValue = Name switch
        {
            "cisi" or "cisi-colors" => await ColorReader.ReadCisiColorAsync(),
            _ => ColorReaderValue.NotFound(),
        };
    }

    ColorDescriptionMode _colorDescriptionMode => _showDetails ? ColorDescriptionMode.All : ColorDescriptionMode.Main;
    bool _showDetails = false;
}
